// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo.proto

package demoservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Chunk struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{0}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type DemoRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	EndOfStream          bool              `protobuf:"varint,5,opt,name=endOfStream,proto3" json:"endOfStream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DemoRequest) Reset()         { *m = DemoRequest{} }
func (m *DemoRequest) String() string { return proto.CompactTextString(m) }
func (*DemoRequest) ProtoMessage()    {}
func (*DemoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{1}
}

func (m *DemoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemoRequest.Unmarshal(m, b)
}
func (m *DemoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemoRequest.Marshal(b, m, deterministic)
}
func (m *DemoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemoRequest.Merge(m, src)
}
func (m *DemoRequest) XXX_Size() int {
	return xxx_messageInfo_DemoRequest.Size(m)
}
func (m *DemoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DemoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DemoRequest proto.InternalMessageInfo

func (m *DemoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DemoRequest) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *DemoRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *DemoRequest) GetEndOfStream() bool {
	if m != nil {
		return m.EndOfStream
	}
	return false
}

type DemoReply struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	EndOfStream          bool              `protobuf:"varint,4,opt,name=endOfStream,proto3" json:"endOfStream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DemoReply) Reset()         { *m = DemoReply{} }
func (m *DemoReply) String() string { return proto.CompactTextString(m) }
func (*DemoReply) ProtoMessage()    {}
func (*DemoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{2}
}

func (m *DemoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemoReply.Unmarshal(m, b)
}
func (m *DemoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemoReply.Marshal(b, m, deterministic)
}
func (m *DemoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemoReply.Merge(m, src)
}
func (m *DemoReply) XXX_Size() int {
	return xxx_messageInfo_DemoReply.Size(m)
}
func (m *DemoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DemoReply.DiscardUnknown(m)
}

var xxx_messageInfo_DemoReply proto.InternalMessageInfo

func (m *DemoReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DemoReply) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *DemoReply) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *DemoReply) GetEndOfStream() bool {
	if m != nil {
		return m.EndOfStream
	}
	return false
}

// Server configuration
type Config struct {
	// The cluster name of the service.
	Clustername string `protobuf:"bytes,1,opt,name=clustername,proto3" json:"clustername,omitempty"`
	// The execution timeout.
	Timeout              uint32   `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{3}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetClustername() string {
	if m != nil {
		return m.Clustername
	}
	return ""
}

func (m *Config) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func init() {
	proto.RegisterType((*Chunk)(nil), "demoservice.Chunk")
	proto.RegisterType((*DemoRequest)(nil), "demoservice.DemoRequest")
	proto.RegisterMapType((map[string]string)(nil), "demoservice.DemoRequest.HeadersEntry")
	proto.RegisterType((*DemoReply)(nil), "demoservice.DemoReply")
	proto.RegisterMapType((map[string]string)(nil), "demoservice.DemoReply.HeadersEntry")
	proto.RegisterType((*Config)(nil), "demoservice.Config")
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor_ca53982754088a9d) }

var fileDescriptor_ca53982754088a9d = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xdf, 0x4a, 0xeb, 0x40,
	0x10, 0xc6, 0xd9, 0xa4, 0x7f, 0x4e, 0x27, 0x3d, 0x87, 0xc3, 0x72, 0x8e, 0x84, 0x5e, 0x48, 0xac,
	0x08, 0xb9, 0x0a, 0x52, 0x6f, 0xa4, 0x20, 0x42, 0x5b, 0x41, 0x2f, 0xc4, 0x92, 0x3e, 0x41, 0xda,
	0x9d, 0xb6, 0xa1, 0xd9, 0xdd, 0xb8, 0xd9, 0x04, 0xf3, 0x3a, 0x3e, 0x8f, 0x17, 0x3e, 0x92, 0x64,
	0xdb, 0x62, 0xc0, 0x16, 0x6f, 0xbc, 0x9b, 0xf9, 0x98, 0x99, 0x6f, 0x7e, 0x3b, 0x0b, 0xc0, 0x90,
	0xcb, 0x20, 0x55, 0x52, 0x4b, 0xea, 0x54, 0x71, 0x86, 0xaa, 0x88, 0x17, 0xd8, 0x3f, 0x83, 0xe6,
	0x78, 0x9d, 0x8b, 0x0d, 0x75, 0xa1, 0x3d, 0x96, 0x42, 0xa3, 0xd0, 0x2e, 0xf1, 0x88, 0xdf, 0x0d,
	0xf7, 0x69, 0xff, 0x9d, 0x80, 0x33, 0x41, 0x2e, 0x43, 0x7c, 0xce, 0x31, 0xd3, 0xf4, 0x0f, 0x58,
	0x31, 0x33, 0x45, 0x9d, 0xd0, 0x8a, 0x19, 0xbd, 0x85, 0xf6, 0x1a, 0x23, 0x86, 0x2a, 0x73, 0x6d,
	0xcf, 0xf6, 0x9d, 0xc1, 0x45, 0x50, 0x73, 0x08, 0x6a, 0xad, 0xc1, 0xfd, 0xb6, 0xee, 0x4e, 0x68,
	0x55, 0x86, 0xfb, 0x2e, 0x4a, 0xa1, 0x31, 0x97, 0xac, 0x74, 0x1b, 0xc6, 0xd7, 0xc4, 0xd4, 0x03,
	0x07, 0x05, 0x7b, 0x5a, 0xce, 0xb4, 0xc2, 0x88, 0xbb, 0x4d, 0x8f, 0xf8, 0xbf, 0xc2, 0xba, 0xd4,
	0x1b, 0x42, 0xb7, 0x3e, 0x8e, 0xfe, 0x05, 0x7b, 0x83, 0xe5, 0x6e, 0xaf, 0x2a, 0xa4, 0xff, 0xa0,
	0x59, 0x44, 0x49, 0x8e, 0xae, 0x65, 0xb4, 0x6d, 0x32, 0xb4, 0xae, 0x49, 0xff, 0x8d, 0x40, 0x67,
	0xbb, 0x57, 0x9a, 0x94, 0x5f, 0x80, 0x6e, 0x3e, 0x81, 0x2c, 0x03, 0x74, 0x7e, 0x00, 0x28, 0x4d,
	0xca, 0x6f, 0x70, 0xec, 0xe3, 0x38, 0x8d, 0x9f, 0xc5, 0x99, 0x40, 0x6b, 0x2c, 0xc5, 0x32, 0x5e,
	0x55, 0x3e, 0x8b, 0x24, 0xcf, 0x34, 0x2a, 0x11, 0x71, 0xdc, 0x75, 0xd7, 0xa5, 0xea, 0xce, 0x3a,
	0xe6, 0x28, 0x73, 0x6d, 0xe6, 0xfc, 0x0e, 0xf7, 0xe9, 0x60, 0x0a, 0x50, 0xa1, 0xcd, 0x50, 0x15,
	0xa8, 0xe8, 0x08, 0xe0, 0x41, 0x14, 0x72, 0x83, 0x95, 0x46, 0xdd, 0x63, 0x27, 0xed, 0x9d, 0x1c,
	0x7e, 0x1b, 0x9f, 0x5c, 0x92, 0xd1, 0x29, 0xfc, 0x5f, 0x48, 0x1e, 0xe0, 0x4b, 0xc4, 0xd3, 0x04,
	0x83, 0x15, 0x0a, 0x54, 0x91, 0x46, 0x36, 0x25, 0xaf, 0x96, 0x35, 0x79, 0x9c, 0xb7, 0xcc, 0x87,
	0xbc, 0xfa, 0x08, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x0b, 0xde, 0x1d, 0x9e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServerClient is the client API for DemoServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServerClient interface {
	InvokeDemo(ctx context.Context, opts ...grpc.CallOption) (DemoServer_InvokeDemoClient, error)
}

type demoServerClient struct {
	cc *grpc.ClientConn
}

func NewDemoServerClient(cc *grpc.ClientConn) DemoServerClient {
	return &demoServerClient{cc}
}

func (c *demoServerClient) InvokeDemo(ctx context.Context, opts ...grpc.CallOption) (DemoServer_InvokeDemoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DemoServer_serviceDesc.Streams[0], "/demoservice.DemoServer/InvokeDemo", opts...)
	if err != nil {
		return nil, err
	}
	x := &demoServerInvokeDemoClient{stream}
	return x, nil
}

type DemoServer_InvokeDemoClient interface {
	Send(*DemoRequest) error
	Recv() (*DemoReply, error)
	grpc.ClientStream
}

type demoServerInvokeDemoClient struct {
	grpc.ClientStream
}

func (x *demoServerInvokeDemoClient) Send(m *DemoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *demoServerInvokeDemoClient) Recv() (*DemoReply, error) {
	m := new(DemoReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DemoServerServer is the server API for DemoServer service.
type DemoServerServer interface {
	InvokeDemo(DemoServer_InvokeDemoServer) error
}

// UnimplementedDemoServerServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServerServer struct {
}

func (*UnimplementedDemoServerServer) InvokeDemo(srv DemoServer_InvokeDemoServer) error {
	return status.Errorf(codes.Unimplemented, "method InvokeDemo not implemented")
}

func RegisterDemoServerServer(s *grpc.Server, srv DemoServerServer) {
	s.RegisterService(&_DemoServer_serviceDesc, srv)
}

func _DemoServer_InvokeDemo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DemoServerServer).InvokeDemo(&demoServerInvokeDemoServer{stream})
}

type DemoServer_InvokeDemoServer interface {
	Send(*DemoReply) error
	Recv() (*DemoRequest, error)
	grpc.ServerStream
}

type demoServerInvokeDemoServer struct {
	grpc.ServerStream
}

func (x *demoServerInvokeDemoServer) Send(m *DemoReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *demoServerInvokeDemoServer) Recv() (*DemoRequest, error) {
	m := new(DemoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DemoServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demoservice.DemoServer",
	HandlerType: (*DemoServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "InvokeDemo",
			Handler:       _DemoServer_InvokeDemo_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "demo.proto",
}
